<launch>

    <!-- Camera System -->
    <arg name="camera_frame" default="usb_cam_frame"/>
    <arg name="video_device" default="/dev/video1"/>
    <arg name="camera_node_name" default="usb_cam_node"/>

    <!--<node pkg="laptop_node" type="tf_broadcaster.py" name="fixed_broadcaster">
        <param name="target_frame" type="string" value="$(arg camera_frame)" />
    </node>-->

    <node pkg="usb_cam" type="usb_cam_node" name="$(arg camera_node_name)">
        <param name="video_device" type="string" value="$(arg video_device)"/>
        <param name="pixel_format" type="string" value="yuyv" /><!-- yuyv mjpeg -->
        <param name="io_method" type="string" value="mmap" />
        <param name="image_width" type="int" value="1280" /><!-- 640 800 1280 1280 1600 -->
        <param name="image_height" type="int" value="800" /><!-- 480 600 720   800 1200 -->
        <param name="camera_frame_id" type="string" value="$(arg camera_frame)" />
        <param name="camera_info_url" type="string" value="file://$(find laptop_node)/config/epuck_table_logitech_1280_800.yaml" />
    </node>

    <!-- Marker Controller -->
    <arg name="marker_size" default="6.2" /><!--6.2-->
    <arg name="max_new_marker_error" default="0.08" />
    <arg name="max_track_error" default="0.1" />
    <arg name="cam_image_topic" default="/$(arg camera_node_name)/image_raw" />
    <arg name="cam_info_topic" default="/$(arg camera_node_name)/camera_info" />
    <arg name="output_frame" default="/$(arg camera_frame)" />

    <node name="ar_track_alvar" pkg="ar_track_alvar" type="individualMarkersNoKinect" respawn="false" output="screen" args="$(arg marker_size) $(arg max_new_marker_error) $(arg max_track_error) $(arg cam_image_topic) $(arg cam_info_topic) $(arg output_frame)">
        <param name="max_frequency" type="int" value="10" />
    </node>
    
    
    <!-- Epuck Controller -->
    <!--<arg name="robot_address0" value="10:00:E8:6C:D7:C8"/>-->    <!--1593-->
    <!--<arg name="robot_address1" value="10:00:E8:6C:D8:20"/>-->    <!--1573-->
    <!--<arg name="robot_address2" value="10:00:E8:6C:D7:E6"/>-->    <!--1589-->
    <!--<arg name="robot_address3" value="10:00:E8:6C:EC:71"/>-->    <!--1555-->
    <!--<arg name="epuck_address" default="10:00:E8:6C:D7:C8"/>
    <arg name="epuck_name" default="epuck_robot_0"/>
    <arg name="cam_en" default="false"/>
    <arg name="acc_en" default="false"/>
    <arg name="prox_en" default="false"/>
    <arg name="mot_pos_en" default="false"/>
    <arg name="light_en" default="false"/>
    <arg name="floor_en" default="false"/>
    <arg name="sel_en" default="false"/>
    <arg name="mot_speed_en" default="true"/>
    <arg name="mic_en" default="false"/>
    <arg name="xpos" default="0.0"/>
    <arg name="ypos" default="0.0"/>
    <arg name="theta" default="0.0"/>
    <arg name="is_single_robot" default="1" />

    <node pkg="epuck_driver" type="epuck_driver.py" name="$(arg epuck_name)" output="screen">
        <param name="epuck_address" value="$(arg epuck_address)"/>
        <param name="epuck_name" value="$(arg epuck_name)"/>
        <param name="camera" value="$(arg cam_en)"/>
        <param name="accelerometer" value="$(arg acc_en)"/>
        <param name="proximity" value="$(arg prox_en)"/>
        <param name="motor_position" value="$(arg mot_pos_en)"/>
        <param name="light" value="$(arg light_en)"/>
        <param name="floor" value="$(arg floor_en)"/>
        <param name="selector" value="$(arg sel_en)"/>
        <param name="motor_speed" value="$(arg mot_speed_en)"/>
        <param name="microphone" value="$(arg mic_en)"/>
        <param name="xpos" value="$(arg xpos)"/>
        <param name="ypos" value="$(arg ypos)"/>
        <param name="theta" value="$(arg theta)"/>
    </node>

    <param name="robot_description" textfile="$(find epuck_driver)/urdf/epuck_urdf.xml"/>

    <node name="epuck_state_publisher" pkg="robot_state_publisher" type="state_publisher">
        <param name="tf_prefix" value="$(arg epuck_name)" />
    </node>-->

    <!--node if="$(arg is_single_robot)" pkg="rviz" type="rviz" output="screen" name="rviz" args="-d $(find epuck_driver)/config/single_epuck_driver_rviz.rviz"/-->

</launch>
